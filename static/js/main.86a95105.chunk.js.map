{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pageNumbers","i","Math","ceil","push","className","classNames","disabled","href","onClick","map","item","active","length","items","from","to","numbers","n","getNumbers","potion","App","useState","setCurrentPage","setPerPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","min","id","value","onChange","event","Number","target","handleNewTodoTitle","number","htmlFor","numberOfPage","ReactDOM","render","document","getElementById"],"mappings":"oNAWaA,EAA8B,SAAC,GAS1C,IAJK,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAc,GAGXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKP,EAAQC,GAAUI,IAC/CD,EAAYI,KAAKH,GAenB,OACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CACrCC,SAA0B,IAAhBT,IADZ,SAIE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBV,EACfW,QAvBe,WACD,IAAhBX,GACFC,EAAaD,EAAc,IAgBzB,oBAUDE,EAAYU,KAAI,SAACC,GAAD,OACf,oBACEN,UAAWC,IAAW,YAAa,CACjCM,OAAQd,IAAgBa,IAF5B,SAKE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GAEVF,QAAS,kBAAMV,EAAaY,IAL9B,SAOGA,GAHIA,QAQX,oBAAIN,UAAWC,IAAW,YAAa,CACrCC,SAAUT,IAAgBE,EAAYa,SADxC,SAIE,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAK,QACL,gBAAeV,IAAgBE,EAAYa,OAC3CJ,QAjDgB,WAClBX,EAAcE,EAAYa,QAC5Bd,EAAaD,EAAc,IA0CzB,wBCnEFgB,ECPC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQb,KAAKc,GAGf,OAAOD,EDAKE,CAAW,EAAG,IACzBT,KAAI,SAAAQ,GAAC,qBAAYA,MAEdE,EAAS,CAAC,EAAG,EAAG,GAAI,IAEbC,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOxB,EAAP,KAAoByB,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOzB,EAAP,KAAgB2B,EAAhB,KAEMC,EAAkB3B,EAAcD,EAChC6B,EAAmBD,EAAkB5B,EACrC8B,EAAeb,EAAMc,MAAMF,EAAkBD,GAQnD,OACE,sBAAKpB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,yBACYP,EADZ,mBACkC4B,EAAmB,EADrD,cAC4DxB,KAAK2B,IAAIJ,EAAiB,IADtF,aAGA,sBAAKpB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACEyB,GAAG,kBACHzB,UAAU,eACV,UAAQ,kBACR0B,MAAOlC,EACPmC,SAAU,SAACC,GAAD,OAlBO,SAACA,GAC1BT,EAAWU,OAAOD,EAAME,OAAOJ,QAiBFK,CAAmBH,IAL1C,SAOGb,EAAOV,KAAI,SAAA2B,GAAM,OAChB,yBAAqBN,MAAOM,EAA5B,UACG,IACAA,EACA,MAHUA,UASnB,uBAAOC,QAAQ,kBAAkBjC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAAO,GACPC,QAASA,EACTC,YAAaA,EACbC,aAzCa,SAACwC,GAAD,OAA0BhB,EAAegB,MA4CxD,6BACGZ,EAAajB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YE/DlC6B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.86a95105.chunk.js","sourcesContent":["import React from 'react';\n\nimport classNames from 'classnames';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number\n  onPageChange: (item: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageNumbers = [];\n\n  /* eslint-disable no-plusplus */\n  for (let i = 1; i <= Math.ceil(total / perPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  const handlePrevPage = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handlenNextPage = () => {\n    if (currentPage < pageNumbers.length) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', {\n        disabled: currentPage === 1,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlePrevPage}\n        >\n          «\n        </a>\n      </li>\n      {pageNumbers.map((item) => (\n        <li\n          className={classNames('page-item', {\n            active: currentPage === item,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${item}`}\n            key={item}\n            onClick={() => onPageChange(item)}\n          >\n            {item}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames('page-item', {\n        disabled: currentPage === pageNumbers.length,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pageNumbers.length}\n          onClick={handlenNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\n\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst potion = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(3);\n\n  const indexOfLastPost = currentPage * perPage;\n  const indexOfFirstPost = indexOfLastPost - perPage;\n  const currentPosts = items.slice(indexOfFirstPost, indexOfLastPost);\n\n  const handlePage = (numberOfPage: number) => setCurrentPage(numberOfPage);\n\n  const handleNewTodoTitle = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(event.target.value));\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {` Page ${currentPage} (items ${indexOfFirstPost + 1} - ${Math.min(indexOfLastPost, 42)} of 42)`}\n      </p>\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            data-cy=\"perPageSelector\"\n            value={perPage}\n            onChange={(event) => handleNewTodoTitle(event)}\n          >\n            {potion.map(number => (\n              <option key={number} value={number}>\n                {' '}\n                {number}\n                {' '}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={42}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePage}\n      />\n\n      <ul>\n        {currentPosts.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}